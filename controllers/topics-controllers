const {
  fetchTopics,
  fetchApi,
  fetchArticleById,
  fetchArticles,
  fetchCommentByArticleId,
  addCommentByArticleId,
  updateVotesByArticleId,
  removeCommentById,
  fetchUsers,
} = require("../models/topics-models");

function getTopics(req, res) {
  fetchTopics().then((topics) => {
    return res.status(200).send({ topics });
  });
}

function getError(req, res, next) {
  next({ status: 404, msg: "Invalid Request" });
}

function getApi(req, res, next) {
  fetchApi().then((api) => {
    return res.status(200).send({ api });
  });
}

function getArticlesById(req, res, next) {
  const articleIndex = req.params.article_id;
  fetchArticleById(articleIndex)
    .then((article) => {
      res.status(200).send({ article });
    })
    .catch((err) => {
      next(err);
    });
}

function getArticles(req, res, next) {
  fetchArticles(req.query.topic)
    .then((articles) => {
      return res.status(200).send({ articles });
    })
    .catch((err) => {
      next(err);
    });
}

function getCommentByArticleId(req, res, next) {
  const articleIndex = req.params.article_id;
  fetchCommentByArticleId(articleIndex)
    .then((comments) => {
      res.status(200).send({ comments });
    })
    .catch((err) => {
      next(err);
    });
}

function postCommentByArticleId(req, res, next) {
  const newCommentArticleId = req.params.article_id;
  const newCommentUsername = req.body.username;
  const newCommentBody = req.body.body;
  addCommentByArticleId(newCommentArticleId, newCommentUsername, newCommentBody)
    .then((comment) => {
      res.status(201).send({ comment });
    })
    .catch((err) => {
      next(err);
    });
}

function patchArticlesById(req, res, next) {
  const articleId = req.params.article_id;
  const incVotes = req.body.inc_votes;
  updateVotesByArticleId(articleId, incVotes)
    .then((article) => {
      res.status(200).send({ article });
    })
    .catch((err) => {
      next(err);
    });
}

function deleteCommentById(req, res, next) {
  const commentId = req.params.comment_id;
  removeCommentById(commentId)
    .then(() => {
      res.status(204).send();
    })
    .catch((err) => {
      next(err);
    });
}

function getUsers(req, res, next) {
  fetchUsers().then((users) => {
    return res.status(200).send({ users });
  });
}

module.exports = {
  getTopics,
  getError,
  getApi,
  getArticlesById,
  getArticles,
  getCommentByArticleId,
  postCommentByArticleId,
  patchArticlesById,
  deleteCommentById,
  getUsers,
};
